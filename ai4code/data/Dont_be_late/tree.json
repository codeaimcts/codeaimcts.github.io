[[{"token": "#", "state": "#", "selected": false, "score": 0.25, "complete_program": "# cook your dish here\nn,m,s=list(map(int,input().split()))\nif s==0:\n\tif n==0:\n\t\tprint(\"Yes\")\n\telse:\n\t\tprint(\"No\")\nelif (n==1 and m==0):\n\tprint(\"Yes\")\nelif (m%s==0):\n\tprint(\"Yes\")\nelse:\n\tprint(\"No\")\n"}, {"token": "n", "state": "n", "selected": true, "score": 0.375, "complete_program": "n,m,s=map(int,input().split())\nif n==m:\n\tif s==0:\n\t\tprint(\"Yes\")\n\telse:\n\t\tprint(\"No\")\nelse:\n\tif s>0:\n\t\tm=(n*s)/(m-1)\n\t\tif int(m)==m:\n\t\t\tprint(\"Yes\")\n\t\telse:\n\t\t\tprint(\"No\")\n\telse:\n\t\tm=(n*s)/(m-1)\n\t\tif int(m)<m:\n\t\t\tprint(\"No\")\n\t\telse:\n\t\t\tprint(\"Yes\")\n"}, {"token": "import", "state": "import", "selected": false, "score": 0.0, "complete_program": "import math\ndef solve(d, t, s):\n\tif d == t:\n\t\treturn True\n\telif d > t:\n\t\treturn False\n\telse:\n\t\treturn math.ceil((t - d)/(s - s%t)) <= 0.5\n\nn,m=list(map(int, input().split()))\nt = int(input())\ns = int(input())\nif solve(n, t, s):\n\tprint(\"Yes\")\nelse:\n\tprint(\"No\")\n"}], [{"token": ",", "state": "n,", "selected": true, "score": 0.375, "complete_program": "n,m,s=map(int,input().split())\nif n==m:\n\tif s==0:\n\t\tprint(\"Yes\")\n\telse:\n\t\tprint(\"No\")\nelse:\n\tif s>0:\n\t\tm=(n*s)/(m-1)\n\t\tif int(m)==m:\n\t\t\tprint(\"Yes\")\n\t\telse:\n\t\t\tprint(\"No\")\n\telse:\n\t\tm=(n*s)/(m-1)\n\t\tif int(m)<m:\n\t\t\tprint(\"No\")\n\t\telse:\n\t\t\tprint(\"Yes\")\n"}, {"token": "=", "state": "n=", "selected": false, "score": 0.0, "complete_program": "n=int(input())\nm=int(input())\nif n==1:\n\tif m%2==0:\n\t\tprint(\"Yes\")\n\telse:\n\t\tprint(\"No\")\nelif m==2:\n\tif n==1000:\n\t\tprint(\"Yes\")\n\telif n==10000:\n\t\tprint(\"Yes\")\n\telse:\n\t\tprint(\"No\")\nelse:\n\tif (n*(n+1)/2)<=m:\n\t\tprint(\"Yes\")\n\telse:\n\t\tprint(\"No\")\n"}, {"token": "D", "state": "nD", "selected": false, "score": 0.375, "complete_program": "nD, s, t = map(int, input().split())\nif nD == t:\n\tprint(\"Yes\")\nelse:\n\tt = s / nD\n\ts = t * 1000\n\tif t < s:\n\t\tprint(\"No\")\n\telse:\n\t\tprint(\"Yes\")\n"}], [{"token": "m", "state": "n,m", "selected": false, "score": 0.375, "complete_program": "n,m,s=map(int,input().split())\nif n==m:\n\tif s==0:\n\t\tprint(\"Yes\")\n\telse:\n\t\tprint(\"No\")\nelse:\n\tif s>0:\n\t\tm=(n*s)/(m-1)\n\t\tif int(m)==m:\n\t\t\tprint(\"Yes\")\n\t\telse:\n\t\t\tprint(\"No\")\n\telse:\n\t\tm=(n*s)/(m-1)\n\t\tif int(m)<m:\n\t\t\tprint(\"No\")\n\t\telse:\n\t\t\tprint(\"Yes\")\n"}, {"token": " t", "state": "n, t", "selected": true, "score": 0.5, "complete_program": "n, t, s = map(int, input().split())\nif t == 1000:\n\tprint('Yes')\nelse:\n\tif (n*s) % (t*s) == 0:\n\t\tprint('Yes')\n\telse:\n\t\tprint('No')\n"}, {"token": "t", "state": "n,t", "selected": false, "score": 0.375, "complete_program": "n,t,s=map(int,input().split())\nif(n==t):\n\tprint(\"Yes\")\nelse:\n\tif(s*t<n):\n\t\ts=s+n\n\t\tt=t+s\n\telse:\n\t\ts=t+n\n\t\tt=t+s\n\tif(t%(s*n)==0):\n\t\tprint(\"Yes\")\n\telse:\n\t\tprint(\"No\")\n"}], [{"token": ",", "state": "n, t,", "selected": true, "score": 0.5, "complete_program": "n, t, s = map(int, input().split())\nif t == 1000:\n\tprint('Yes')\nelse:\n\tif (n*s) % (t*s) == 0:\n\t\tprint('Yes')\n\telse:\n\t\tprint('No')\n"}, {"token": " =", "state": "n, t =", "selected": false, "score": 0.0, "complete_program": "n, t = map(int, input().split())\nif t == 1000:\n\tprint(\"Yes\")\nelse:\n\tprint(\"No\")\n"}, {"token": ",", "state": "n, t,", "selected": false, "score": 0.125, "complete_program": "n, t, s = map(int,input().split())\nif t == n:\n\tprint(\"Yes\")\nelse:\n\tif t<n:\n\t\tt = n - t\n\t\ts = s + t * s / 60\n\tif s < t:\n\t\ts = t - s\n\t\tif t % s == 0:\n\t\t\tprint(\"Yes\")\n\t\telse:\n\t\t\tprint(\"No\")\n"}], [{"token": " s", "state": "n, t, s", "selected": true, "score": 0.5, "complete_program": "n, t, s = map(int, input().split())\nif t == 1000:\n\tprint('Yes')\nelse:\n\tif (n*s) % (t*s) == 0:\n\t\tprint('Yes')\n\telse:\n\t\tprint('No')\n"}, {"token": " m", "state": "n, t, m", "selected": false, "score": 0.375, "complete_program": "n, t, m = map(int, input().split())\nif t == n:\n\tprint(\"Yes\")\nelse:\n\tif (n*t%(m*60)==0):\n\t\tprint(\"Yes\")\n\telse:\n\t\tprint(\"No\")\n"}, {"token": " w", "state": "n, t, w", "selected": false, "score": 0.0, "complete_program": "n, t, w = map(int, input().split())\nif n == t:\n\tprint(\"Yes\")\nelse:\n\tif (n * w) % s == 0:\n\t\tprint(\"Yes\")\n\telse:\n\t\tprint(\"No\")\n"}], [{"token": " =", "state": "n, t, s =", "selected": false, "score": 0.5, "complete_program": "n, t, s = map(int, input().split())\nif t == 1000:\n\tprint('Yes')\nelse:\n\tif (n*s) % (t*s) == 0:\n\t\tprint('Yes')\n\telse:\n\t\tprint('No')\n"}, {"token": "=", "state": "n, t, s=", "selected": true, "score": 0.625, "complete_program": "n, t, s=map(int, input().split())\nif n==t:\n\tprint(\"Yes\")\nelse:\n\tif n==1 or t==1:\n\t\tprint(\"No\")\n\telse:\n\t\tif (n*s)%(t*s)==0:\n\t\t\tprint(\"Yes\")\n\t\telse:\n\t\t\tprint(\"No\")\n"}, {"token": ",", "state": "n, t, s,", "selected": false, "score": 0.0, "complete_program": "n, t, s, w = map(int, input().split())\nif n == t:\n\tprint(\"Yes\")\nelse:\n\tif (s*t) % w == 0:\n\t\tprint(\"Yes\")\n\telse:\n\t\tprint(\"No\")\n"}], [{"token": "map", "state": "n, t, s=map", "selected": true, "score": 0.625, "complete_program": "n, t, s=map(int, input().split())\nif n==t:\n\tprint(\"Yes\")\nelse:\n\tif n==1 or t==1:\n\t\tprint(\"No\")\n\telse:\n\t\tif (n*s)%(t*s)==0:\n\t\t\tprint(\"Yes\")\n\t\telse:\n\t\t\tprint(\"No\")\n"}, {"token": "list", "state": "n, t, s=list", "selected": false, "score": 0.25, "complete_program": "n, t, s=list(map(int, input().split()))\nif t==1:\n\tprint(\"Yes\")\nelif n==1500:\n\tprint(\"Yes\")\nelif (n*s*1000)/1000<=n:\n\tprint(\"Yes\")\nelse:\n\tprint(\"No\")\n"}, {"token": " map", "state": "n, t, s= map", "selected": false, "score": 0.0, "complete_program": "n, t, s= map(int, input().split())\nif t == n:\n\tprint(\"Yes\")\nelse:\n\tif n == t:\n\t\tprint(\"Yes\")\n\telse:\n\t\tt1 = int(input())\n\t\tt2 = n * s / 60\n\t\tif t2 < t:\n\t\t\tprint(\"No\")\n\t\telse:\n\t\t\tprint(\"Yes\")\n"}], [{"token": "(", "state": "n, t, s=map(", "selected": true, "score": 0.625, "complete_program": "n, t, s=map(int, input().split())\nif n==t:\n\tprint(\"Yes\")\nelse:\n\tif n==1 or t==1:\n\t\tprint(\"No\")\n\telse:\n\t\tif (n*s)%(t*s)==0:\n\t\t\tprint(\"Yes\")\n\t\telse:\n\t\t\tprint(\"No\")\n"}, {"token": "((", "state": "n, t, s=map((", "selected": false, "score": 0.0, "complete_program": "n, t, s=map((int, input().split()))\nif n==t:\n\tprint(\"Yes\")\nelse:\n\tif n==1 or t==1:\n\t\tprint(\"No\")\n\telse:\n\t\tif (n*s)%(t*s)==0:\n\t\t\tprint(\"Yes\")\n\t\telse:\n\t\t\tprint(\"No\")\n"}, {"token": "()", "state": "n, t, s=map()", "selected": false, "score": 0.0, "complete_program": "n, t, s=map()\nm = int(input())\nif t == \"15\":\n\tprint(\"Yes\")\nelse:\n\tif n == \"1000\":\n\t\tif t == \"15\":\n\t\t\tprint(\"Yes\")\n\t\telse:\n\t\t\tprint(\"No\")\n\telse:\n\t\tif t == \"15\":\n\t\t\tprint(\"Yes\")\n\t\telse:\n\t\t\tprint(\"No\")\n"}], [{"token": "int", "state": "n, t, s=map(int", "selected": true, "score": 0.625, "complete_program": "n, t, s=map(int, input().split())\nif n==t:\n\tprint(\"Yes\")\nelse:\n\tif n==1 or t==1:\n\t\tprint(\"No\")\n\telse:\n\t\tif (n*s)%(t*s)==0:\n\t\t\tprint(\"Yes\")\n\t\telse:\n\t\t\tprint(\"No\")\n"}, {"token": "float", "state": "n, t, s=map(float", "selected": false, "score": 0.5, "complete_program": "n, t, s=map(float, input().split())\nif t==0:\n\tprint(\"No\")\nelif t==1:\n\tprint(\"Yes\")\nelse:\n\tif n==1000:\n\t\tif s==0:\n\t\t\tprint(\"Yes\")\n\t\telif s==s:\n\t\t\tprint(\"Yes\")\n\t\telse:\n\t\t\tprint(\"No\")\n\telse:\n\t\tif (n/s)%(t*s)==0:\n\t\t\tprint(\"Yes\")\n\t\telse:\n\t\t\tprint(\"No\")\n"}, {"token": " int", "state": "n, t, s=map( int", "selected": false, "score": 0.625, "complete_program": "n, t, s=map( int, input().split() )\nif n==t:\n\tprint(\"Yes\")\nelse:\n\tif n>t:\n\t\tn, t = t, n\n\tif s*t < n:\n\t\tprint(\"No\")\n\telse:\n\t\tprint(\"Yes\")\n"}], [{"token": ",", "state": "n, t, s=map(int,", "selected": true, "score": 0.625, "complete_program": "n, t, s=map(int, input().split())\nif n==t:\n\tprint(\"Yes\")\nelse:\n\tif n==1 or t==1:\n\t\tprint(\"No\")\n\telse:\n\t\tif (n*s)%(t*s)==0:\n\t\t\tprint(\"Yes\")\n\t\telse:\n\t\t\tprint(\"No\")\n"}, {"token": ",", "state": "n, t, s=map(int,", "selected": false, "score": 0.5, "complete_program": "n, t, s=map(int, input().split())\nif t == n:\n\tprint(\"Yes\")\nelse:\n\tif n == t:\n\t\tprint(\"Yes\")\n\telse:\n\t\tdef check(m):\n\t\t\ttime = 0.0\n\t\t\twhile m > 0:\n\t\t\t\ttime += (m/s)\n\t\t\t\tm = m/s\n\t\t\treturn time <= t\n\t\tif check(n):\n\t\t\tprint(\"Yes\")\n\t\telse:\n\t\t\tprint(\"No\")\n"}, {"token": ",[", "state": "n, t, s=map(int,[", "selected": false, "score": 0.5, "complete_program": "n, t, s=map(int,[int(x) for x in input().split()])\nif n==t:\n\tprint(\"Yes\")\nelse:\n\tif (n*s)%(t*s)==0:\n\t\tprint(\"Yes\")\n\telse:\n\t\tprint(\"No\")\n"}], [{"token": " input", "state": "n, t, s=map(int, input", "selected": true, "score": 0.625, "complete_program": "n, t, s=map(int, input().split())\nif n==t:\n\tprint(\"Yes\")\nelse:\n\tif n==1 or t==1:\n\t\tprint(\"No\")\n\telse:\n\t\tif (n*s)%(t*s)==0:\n\t\t\tprint(\"Yes\")\n\t\telse:\n\t\t\tprint(\"No\")\n"}, {"token": "input", "state": "n, t, s=map(int,input", "selected": false, "score": 0.625, "complete_program": "n, t, s=map(int,input().split())\nif n==t:\n\tprint(\"Yes\")\nelse:\n\tif n==1 or t==1:\n\t\tprint(\"No\")\n\telse:\n\t\tif (n*s)%(t*s)==0:\n\t\t\tprint(\"Yes\")\n\t\telse:\n\t\t\tprint(\"No\")\n"}, {"token": " list", "state": "n, t, s=map(int, list", "selected": false, "score": 0.625, "complete_program": "n, t, s=map(int, list(input().split()))\nif n==t:\n\tprint(\"Yes\")\nelse:\n\tif n==1 or t==1:\n\t\tprint(\"No\")\n\telse:\n\t\tif (n*s)%(t*s)==0:\n\t\t\tprint(\"Yes\")\n\t\telse:\n\t\t\tprint(\"No\")\n"}], [{"token": "().", "state": "n, t, s=map(int, input().", "selected": true, "score": 0.625, "complete_program": "n, t, s=map(int, input().split())\nif n==t:\n\tprint(\"Yes\")\nelse:\n\tif n==1 or t==1:\n\t\tprint(\"No\")\n\telse:\n\t\tif (n*s)%(t*s)==0:\n\t\t\tprint(\"Yes\")\n\t\telse:\n\t\t\tprint(\"No\")\n"}, {"token": "())", "state": "n, t, s=map(int, input())", "selected": false, "score": 0.0, "complete_program": "n, t, s=map(int, input())\nif n==t:\n\tprint(\"Yes\")\nelse:\n\tif n==1 or t==1:\n\t\tprint(\"No\")\n\telse:\n\t\tif (n*s)%(t*s)==0:\n\t\t\tprint(\"Yes\")\n\t\telse:\n\t\t\tprint(\"No\")\n"}, {"token": ".", "state": "n, t, s=map(int, input.", "selected": false, "score": 0.0, "complete_program": "n, t, s=map(int, input.split())\nif n==t:\n\tprint(\"Yes\")\nelse:\n\tif n==1:\n\t\tprint(\"No\")\n\telif n==2:\n\t\tif (s*t)%(n*s)==0:\n\t\t\tprint(\"Yes\")\n\t\telse:\n\t\t\tprint(\"No\")\n\telif n==3:\n\t\tif (s*t*2)%(n*s)==0:\n\t\t\tprint(\"Yes\")\n\t\telse:\n\t\t\tprint(\"No\")\n\telse:\n\t\tif (s*t*100)%(n*s)==0:\n\t\t\tprint(\"Yes\")\n\t\telse:\n\t\t\tprint(\"No\")\n"}], [{"token": "split", "state": "n, t, s=map(int, input().split", "selected": true, "score": 0.625, "complete_program": "n, t, s=map(int, input().split())\nif n==t:\n\tprint(\"Yes\")\nelse:\n\tif n==1 or t==1:\n\t\tprint(\"No\")\n\telse:\n\t\tif (n*s)%(t*s)==0:\n\t\t\tprint(\"Yes\")\n\t\telse:\n\t\t\tprint(\"No\")\n"}, {"token": "strip", "state": "n, t, s=map(int, input().strip", "selected": false, "score": 0.25, "complete_program": "n, t, s=map(int, input().strip().split())\nif t==1:\n\tprint(\"Yes\")\nelif n==1500:\n\tprint(\"Yes\")\nelif (n*s*1000)/1000<=n:\n\tprint(\"Yes\")\nelse:\n\tprint(\"No\")\n"}, {"token": "r", "state": "n, t, s=map(int, input().r", "selected": false, "score": 0.25, "complete_program": "n, t, s=map(int, input().rstrip().split())\nif t==1:\n\tprint(\"Yes\")\nelif n==1500:\n\tprint(\"Yes\")\nelif (n*s*1000)/1000<=n:\n\tprint(\"Yes\")\nelse:\n\tprint(\"No\")\n"}], [{"token": "())", "state": "n, t, s=map(int, input().split())", "selected": true, "score": 0.625, "complete_program": "n, t, s=map(int, input().split())\nif n==t:\n\tprint(\"Yes\")\nelse:\n\tif n==1 or t==1:\n\t\tprint(\"No\")\n\telse:\n\t\tif (n*s)%(t*s)==0:\n\t\t\tprint(\"Yes\")\n\t\telse:\n\t\t\tprint(\"No\")\n"}, {"token": "(\"", "state": "n, t, s=map(int, input().split(\"", "selected": false, "score": 0.375, "complete_program": "n, t, s=map(int, input().split(\" \"))\nif n==t:\n\tprint(\"Yes\")\nelse:\n\tif n==1 or t==1:\n\t\tprint(\"No\")\n\telse:\n\t\tif (n*t*100)/s<=n:\n\t\t\tprint(\"Yes\")\n\t\telse:\n\t\t\tprint(\"No\")\n"}, {"token": "());", "state": "n, t, s=map(int, input().split());", "selected": false, "score": 0.375, "complete_program": "n, t, s=map(int, input().split());\nif(s==0):\n\tif(n==1):\n\t\tprint(\"Yes\")\n\telse:\n\t\tprint(\"No\")\nelse:\n\tif(n==1):\n\t\tprint(\"Yes\")\n\telif(t==0):\n\t\tprint(\"No\")\n\telse:\n\t\tif(n==2):\n\t\t\tprint(\"Yes\")\n\t\telse:\n\t\t\tprint(\"No\")\n"}], [{"token": "\n", "state": "n, t, s=map(int, input().split())\n", "selected": true, "score": 0.625, "complete_program": "n, t, s=map(int, input().split())\nif n==t:\n\tprint(\"Yes\")\nelse:\n\tif n==1 or t==1:\n\t\tprint(\"No\")\n\telse:\n\t\tif (n*s)%(t*s)==0:\n\t\t\tprint(\"Yes\")\n\t\telse:\n\t\t\tprint(\"No\")\n"}, {"token": " ", "state": "n, t, s=map(int, input().split()) ", "selected": false, "score": 0.375, "complete_program": "n, t, s=map(int, input().split()) \nif n==t:\n\tprint(\"Yes\")\nelse:\n\tif n>t:\n\t\tn, t = t, n \n\tt1=int(s*(n/t))\n\tif t1==t:\n\t\tprint(\"Yes\")\n\telse:\n\t\tprint(\"No\")\n"}, {"token": " #", "state": "n, t, s=map(int, input().split()) #", "selected": false, "score": 0.25, "complete_program": "n, t, s=map(int, input().split()) #n is number of minutes, t is time in minutes\nif t<n:\n\tif t<s:\n\t\tprint(\"No\")\n\telse:\n\t\tprint(\"Yes\")\nelse:\n\tif t%s==0:\n\t\tprint(\"Yes\")\n\telse:\n\t\tprint(\"No\")\n"}], [{"token": "if", "state": "n, t, s=map(int, input().split())\nif", "selected": false, "score": 0.625, "complete_program": "n, t, s=map(int, input().split())\nif n==t:\n\tprint(\"Yes\")\nelse:\n\tif n==1 or t==1:\n\t\tprint(\"No\")\n\telse:\n\t\tif (n*s)%(t*s)==0:\n\t\t\tprint(\"Yes\")\n\t\telse:\n\t\t\tprint(\"No\")\n"}, {"token": "m", "state": "n, t, s=map(int, input().split())\nm", "selected": false, "score": 0.625, "complete_program": "n, t, s=map(int, input().split())\nm = s / t\nif n < m:\n\tprint(\"No\")\nelse:\n\tprint(\"Yes\")\n"}, {"token": "t", "state": "n, t, s=map(int, input().split())\nt", "selected": true, "score": 1.0, "complete_program": "n, t, s=map(int, input().split())\nt1=n / s\nif t1 <= t:\n\tprint(\"Yes\")\nelse:\n\tprint(\"No\")\n"}], [{"token": "1", "state": "n, t, s=map(int, input().split())\nt1", "selected": true, "score": 1.0, "complete_program": "n, t, s=map(int, input().split())\nt1=n / s\nif t1 <= t:\n\tprint(\"Yes\")\nelse:\n\tprint(\"No\")\n"}, {"token": " =", "state": "n, t, s=map(int, input().split())\nt =", "selected": false, "score": 0.375, "complete_program": "n, t, s=map(int, input().split())\nt = int(t)\nif n*s>t:\n\tprint(\"No\")\nelse:\n\tprint(\"Yes\")\n"}, {"token": "ot", "state": "n, t, s=map(int, input().split())\ntot", "selected": false, "score": 0.375, "complete_program": "n, t, s=map(int, input().split())\ntot = s/n\nif tot < t:\n\tprint(\"No\")\nelse:\n\tprint(\"Yes\")\n"}], [{"token": "=", "state": "n, t, s=map(int, input().split())\nt1=", "selected": true, "score": 1.0, "complete_program": "n, t, s=map(int, input().split())\nt1=n / s\nif t1 <= t:\n\tprint(\"Yes\")\nelse:\n\tprint(\"No\")\n"}, {"token": " =", "state": "n, t, s=map(int, input().split())\nt1 =", "selected": false, "score": 0.375, "complete_program": "n, t, s=map(int, input().split())\nt1 = (n/s)*s\nif t1 <= t:\n\tprint(\"Yes\")\nelse:\n\tprint(\"No\")\n"}, {"token": ",", "state": "n, t, s=map(int, input().split())\nt1,", "selected": false, "score": 0.0, "complete_program": "n, t, s=map(int, input().split())\nt1, s1=0, 0\nwhile n>0:\n\tt += n\n\ts += s1\n\tn -= 1\nif t%(s*s1)==0:\n\tprint(\"Yes\")\nelse:\n\tprint(\"No\")\n"}], [{"token": "n", "state": "n, t, s=map(int, input().split())\nt1=n", "selected": true, "score": 1.0, "complete_program": "n, t, s=map(int, input().split())\nt1=n / s\nif t1 <= t:\n\tprint(\"Yes\")\nelse:\n\tprint(\"No\")\n"}, {"token": "0", "state": "n, t, s=map(int, input().split())\nt1=0", "selected": false, "score": 0.0, "complete_program": "n, t, s=map(int, input().split())\nt1=0\nif t==n:\n\tprint(\"Yes\")\nelse:\n\tt2=int(s*(n/60))\n\tif t2<=t:\n\t\tt1=t2\n\telse:\n\t\tt1=n\n\tif t1==t:\n\t\tprint(\"Yes\")\n"}, {"token": "int", "state": "n, t, s=map(int, input().split())\nt1=int", "selected": false, "score": 0.0, "complete_program": "n, t, s=map(int, input().split())\nt1=int(input())\nif(t1*s>n):\n\tprint(\"Yes\")\nelse:\n\tprint(\"No\")\n"}], [{"token": " /", "state": "n, t, s=map(int, input().split())\nt1=n /", "selected": true, "score": 1.0, "complete_program": "n, t, s=map(int, input().split())\nt1=n / s\nif t1 <= t:\n\tprint(\"Yes\")\nelse:\n\tprint(\"No\")\n"}, {"token": "/", "state": "n, t, s=map(int, input().split())\nt1=n/", "selected": false, "score": 0.25, "complete_program": "n, t, s=map(int, input().split())\nt1=n/s\nif t1>=t:\n\tprint(\"Yes\")\nelse:\n\tprint(\"No\")\n"}, {"token": "*", "state": "n, t, s=map(int, input().split())\nt1=n*", "selected": false, "score": 0.625, "complete_program": "n, t, s=map(int, input().split())\nt1=n*1000/s\nif t1>=t:\n\tprint(\"Yes\")\nelse:\n\tprint(\"No\")\n"}], [{"token": " s", "state": "n, t, s=map(int, input().split())\nt1=n / s", "selected": true, "score": 1.0, "complete_program": "n, t, s=map(int, input().split())\nt1=n / s\nif t1 <= t:\n\tprint(\"Yes\")\nelse:\n\tprint(\"No\")\n"}, {"token": " (", "state": "n, t, s=map(int, input().split())\nt1=n / (", "selected": false, "score": 0.875, "complete_program": "n, t, s=map(int, input().split())\nt1=n / (s + 1)\nif t1 <= t:\n\tprint(\"Yes\")\nelse:\n\tprint(\"No\")\n"}, {"token": " 60", "state": "n, t, s=map(int, input().split())\nt1=n / 60", "selected": false, "score": 0.375, "complete_program": "n, t, s=map(int, input().split())\nt1=n / 60\ns1=t / 60\nif s1 < t:\n\tprint(\"No\")\nelse:\n\tprint(\"Yes\")\n"}], [{"token": "\n", "state": "n, t, s=map(int, input().split())\nt1=n / s\n", "selected": true, "score": 1.0, "complete_program": "n, t, s=map(int, input().split())\nt1=n / s\nif t1 <= t:\n\tprint(\"Yes\")\nelse:\n\tprint(\"No\")\n"}, {"token": " ", "state": "n, t, s=map(int, input().split())\nt1=n / s ", "selected": false, "score": 1.0, "complete_program": "n, t, s=map(int, input().split())\nt1=n / s \nif t1 <= t:\n\tprint(\"Yes\")\nelse:\n\tprint(\"No\")\n"}, {"token": " /", "state": "n, t, s=map(int, input().split())\nt1=n / s /", "selected": false, "score": 0.25, "complete_program": "n, t, s=map(int, input().split())\nt1=n / s / 60\nif t1 < t:\n\tprint(\"No\")\nelse:\n\tprint(\"Yes\")\n"}], [{"token": "if", "state": "n, t, s=map(int, input().split())\nt1=n / s\nif", "selected": true, "score": 1.0, "complete_program": "n, t, s=map(int, input().split())\nt1=n / s\nif t1 <= t:\n\tprint(\"Yes\")\nelse:\n\tprint(\"No\")\n"}, {"token": "print", "state": "n, t, s=map(int, input().split())\nt1=n / s\nprint", "selected": false, "score": 1.0, "complete_program": "n, t, s=map(int, input().split())\nt1=n / s\nprint(\"Yes\" if t1 <= t else \"No\")\n"}, {"token": "#", "state": "n, t, s=map(int, input().split())\nt1=n / s\n#", "selected": false, "score": 1.0, "complete_program": "n, t, s=map(int, input().split())\nt1=n / s\n#print(t1)\nif t1 <= t:\n\tprint(\"Yes\")\nelse:\n\tprint(\"No\")\n"}], [{"token": " t", "state": "n, t, s=map(int, input().split())\nt1=n / s\nif t", "selected": true, "score": 1.0, "complete_program": "n, t, s=map(int, input().split())\nt1=n / s\nif t1 <= t:\n\tprint(\"Yes\")\nelse:\n\tprint(\"No\")\n"}, {"token": "(", "state": "n, t, s=map(int, input().split())\nt1=n / s\nif(", "selected": false, "score": 1.0, "complete_program": "n, t, s=map(int, input().split())\nt1=n / s\nif(t1 <= t):\n\tprint(\"Yes\")\nelse:\n\tprint(\"No\")\n"}, {"token": " int", "state": "n, t, s=map(int, input().split())\nt1=n / s\nif int", "selected": false, "score": 0.375, "complete_program": "n, t, s=map(int, input().split())\nt1=n / s\nif int(t1) == t:\n\tprint(\"Yes\")\nelse:\n\tprint(\"No\")\n"}], [{"token": "1", "state": "n, t, s=map(int, input().split())\nt1=n / s\nif t1", "selected": true, "score": 1.0, "complete_program": "n, t, s=map(int, input().split())\nt1=n / s\nif t1 <= t:\n\tprint(\"Yes\")\nelse:\n\tprint(\"No\")\n"}, {"token": "%", "state": "n, t, s=map(int, input().split())\nt1=n / s\nif t%", "selected": false, "score": 0.625, "complete_program": "n, t, s=map(int, input().split())\nt1=n / s\nif t%t1==0:\n\tprint(\"Yes\")\nelse:\n\tprint(\"No\")\n"}, {"token": " ==", "state": "n, t, s=map(int, input().split())\nt1=n / s\nif t ==", "selected": false, "score": 0.625, "complete_program": "n, t, s=map(int, input().split())\nt1=n / s\nif t == t1:\n\tprint(\"Yes\")\nelse:\n\tprint(\"No\")\n"}], [{"token": " <=", "state": "n, t, s=map(int, input().split())\nt1=n / s\nif t1 <=", "selected": true, "score": 1.0, "complete_program": "n, t, s=map(int, input().split())\nt1=n / s\nif t1 <= t:\n\tprint(\"Yes\")\nelse:\n\tprint(\"No\")\n"}, {"token": " <", "state": "n, t, s=map(int, input().split())\nt1=n / s\nif t1 <", "selected": false, "score": 0.25, "complete_program": "n, t, s=map(int, input().split())\nt1=n / s\nif t1 < t:\n\tprint(\"No\")\nelse:\n\tprint(\"Yes\")\n"}, {"token": " >", "state": "n, t, s=map(int, input().split())\nt1=n / s\nif t1 >", "selected": false, "score": 1.0, "complete_program": "n, t, s=map(int, input().split())\nt1=n / s\nif t1 > t:\n\tprint(\"No\")\nelse:\n\tprint(\"Yes\")\n"}], [{"token": " t", "state": "n, t, s=map(int, input().split())\nt1=n / s\nif t1 <= t", "selected": true, "score": 1.0, "complete_program": "n, t, s=map(int, input().split())\nt1=n / s\nif t1 <= t:\n\tprint(\"Yes\")\nelse:\n\tprint(\"No\")\n"}, {"token": " int", "state": "n, t, s=map(int, input().split())\nt1=n / s\nif t1 <= int", "selected": false, "score": 1.0, "complete_program": "n, t, s=map(int, input().split())\nt1=n / s\nif t1 <= int(t):\n\tprint(\"Yes\")\nelse:\n\tprint(\"No\")\n"}, {"token": " 10", "state": "n, t, s=map(int, input().split())\nt1=n / s\nif t1 <= 10", "selected": false, "score": 0.625, "complete_program": "n, t, s=map(int, input().split())\nt1=n / s\nif t1 <= 10 * n:\n\tprint(\"Yes\")\nelse:\n\tprint(\"No\")\n"}], [{"token": ":", "state": "n, t, s=map(int, input().split())\nt1=n / s\nif t1 <= t:", "selected": true, "score": 1.0, "complete_program": "n, t, s=map(int, input().split())\nt1=n / s\nif t1 <= t:\n\tprint(\"Yes\")\nelse:\n\tprint(\"No\")\n"}, {"token": " :", "state": "n, t, s=map(int, input().split())\nt1=n / s\nif t1 <= t :", "selected": false, "score": 1.0, "complete_program": "n, t, s=map(int, input().split())\nt1=n / s\nif t1 <= t :\n\tprint(\"Yes\")\nelse :\n\tprint(\"No\")\n"}, {"token": " and", "state": "n, t, s=map(int, input().split())\nt1=n / s\nif t1 <= t and", "selected": false, "score": 0.375, "complete_program": "n, t, s=map(int, input().split())\nt1=n / s\nif t1 <= t and (n * s) <= t1:\n\tprint(\"Yes\")\nelse:\n\tprint(\"No\")\n"}], [{"token": "\n", "state": "n, t, s=map(int, input().split())\nt1=n / s\nif t1 <= t:\n", "selected": true, "score": 1.0, "complete_program": "n, t, s=map(int, input().split())\nt1=n / s\nif t1 <= t:\n\tprint(\"Yes\")\nelse:\n\tprint(\"No\")\n"}, {"token": " ", "state": "n, t, s=map(int, input().split())\nt1=n / s\nif t1 <= t: ", "selected": false, "score": 1.0, "complete_program": "n, t, s=map(int, input().split())\nt1=n / s\nif t1 <= t: \n\tprint(\"Yes\")\nelse:\n\tprint(\"No\")\n"}, {"token": " print", "state": "n, t, s=map(int, input().split())\nt1=n / s\nif t1 <= t: print", "selected": false, "score": 1.0, "complete_program": "n, t, s=map(int, input().split())\nt1=n / s\nif t1 <= t: print(\"Yes\")\nelse: print(\"No\")\n"}], [{"token": "\t", "state": "n, t, s=map(int, input().split())\nt1=n / s\nif t1 <= t:\n\t", "selected": true, "score": 1.0, "complete_program": "n, t, s=map(int, input().split())\nt1=n / s\nif t1 <= t:\n\tprint(\"Yes\")\nelse:\n\tprint(\"No\")\n"}, {"token": " ", "state": "n, t, s=map(int, input().split())\nt1=n / s\nif t1 <= t:\n ", "selected": false, "score": 1.0, "complete_program": "n, t, s=map(int, input().split())\nt1=n / s\nif t1 <= t:\n    \n\tprint(\"Yes\")\nelse:\n\tprint(\"No\")\n"}, {"token": " print", "state": "n, t, s=map(int, input().split())\nt1=n / s\nif t1 <= t:\n print", "selected": false, "score": 0.625, "complete_program": "n, t, s=map(int, input().split())\nt1=n / s\nif t1 <= t:\n print(\"Yes\")\nelse:\n t1 = t1 * 100\n"}], [{"token": "print", "state": "n, t, s=map(int, input().split())\nt1=n / s\nif t1 <= t:\n\tprint", "selected": true, "score": 1.0, "complete_program": "n, t, s=map(int, input().split())\nt1=n / s\nif t1 <= t:\n\tprint(\"Yes\")\nelse:\n\tprint(\"No\")\n"}, {"token": "if", "state": "n, t, s=map(int, input().split())\nt1=n / s\nif t1 <= t:\n\tif", "selected": false, "score": 0.625, "complete_program": "n, t, s=map(int, input().split())\nt1=n / s\nif t1 <= t:\n\tif int(t1) == t:\n\t\tprint(\"Yes\")\n\telse:\n\t\tprint(\"No\")\nelse:\n\tprint(\"No\")\n"}, {"token": "return", "state": "n, t, s=map(int, input().split())\nt1=n / s\nif t1 <= t:\n\treturn", "selected": false, "score": 0.375, "complete_program": "n, t, s=map(int, input().split())\nt1=n / s\nif t1 <= t:\n\treturn \"Yes\"\nelse:\n\tprint(\"No\")\n"}], [{"token": "(\"", "state": "n, t, s=map(int, input().split())\nt1=n / s\nif t1 <= t:\n\tprint(\"", "selected": true, "score": 1.0, "complete_program": "n, t, s=map(int, input().split())\nt1=n / s\nif t1 <= t:\n\tprint(\"Yes\")\nelse:\n\tprint(\"No\")\n"}, {"token": "('", "state": "n, t, s=map(int, input().split())\nt1=n / s\nif t1 <= t:\n\tprint('", "selected": false, "score": 1.0, "complete_program": "n, t, s=map(int, input().split())\nt1=n / s\nif t1 <= t:\n\tprint('Yes')\nelse:\n\tprint('No')\n"}, {"token": " (\"", "state": "n, t, s=map(int, input().split())\nt1=n / s\nif t1 <= t:\n\tprint (\"", "selected": false, "score": 1.0, "complete_program": "n, t, s=map(int, input().split())\nt1=n / s\nif t1 <= t:\n\tprint (\"Yes\")\nelse:\n\tprint (\"No\")\n"}], [{"token": "Yes", "state": "n, t, s=map(int, input().split())\nt1=n / s\nif t1 <= t:\n\tprint(\"Yes", "selected": true, "score": 1.0, "complete_program": "n, t, s=map(int, input().split())\nt1=n / s\nif t1 <= t:\n\tprint(\"Yes\")\nelse:\n\tprint(\"No\")\n"}, {"token": "yes", "state": "n, t, s=map(int, input().split())\nt1=n / s\nif t1 <= t:\n\tprint(\"yes", "selected": false, "score": 0.375, "complete_program": "n, t, s=map(int, input().split())\nt1=n / s\nif t1 <= t:\n\tprint(\"yes\")\nelse:\n\tprint(\"No\")\n"}, {"token": "YES", "state": "n, t, s=map(int, input().split())\nt1=n / s\nif t1 <= t:\n\tprint(\"YES", "selected": false, "score": 0.375, "complete_program": "n, t, s=map(int, input().split())\nt1=n / s\nif t1 <= t:\n\tprint(\"YES\")\nelse:\n\tprint(\"No\")\n"}], [{"token": "\")", "state": "n, t, s=map(int, input().split())\nt1=n / s\nif t1 <= t:\n\tprint(\"Yes\")", "selected": true, "score": 1.0, "complete_program": "n, t, s=map(int, input().split())\nt1=n / s\nif t1 <= t:\n\tprint(\"Yes\")\nelse:\n\tprint(\"No\")\n"}, {"token": ".\")", "state": "n, t, s=map(int, input().split())\nt1=n / s\nif t1 <= t:\n\tprint(\"Yes.\")", "selected": false, "score": 0.375, "complete_program": "n, t, s=map(int, input().split())\nt1=n / s\nif t1 <= t:\n\tprint(\"Yes.\")\nelse:\n\tprint(\"No\")\n"}, {"token": "\\", "state": "n, t, s=map(int, input().split())\nt1=n / s\nif t1 <= t:\n\tprint(\"Yes\\", "selected": false, "score": 1.0, "complete_program": "n, t, s=map(int, input().split())\nt1=n / s\nif t1 <= t:\n\tprint(\"Yes\\n\")\nelse:\n\tprint(\"No\")\n"}], [{"token": "\n", "state": "n, t, s=map(int, input().split())\nt1=n / s\nif t1 <= t:\n\tprint(\"Yes\")\n", "selected": true, "score": 1.0, "complete_program": "n, t, s=map(int, input().split())\nt1=n / s\nif t1 <= t:\n\tprint(\"Yes\")\nelse:\n\tprint(\"No\")\n"}, {"token": " ", "state": "n, t, s=map(int, input().split())\nt1=n / s\nif t1 <= t:\n\tprint(\"Yes\") ", "selected": false, "score": 1.0, "complete_program": "n, t, s=map(int, input().split())\nt1=n / s\nif t1 <= t:\n\tprint(\"Yes\") \nelse:\n\tprint(\"No\")\n"}, {"token": "\n\n", "state": "n, t, s=map(int, input().split())\nt1=n / s\nif t1 <= t:\n\tprint(\"Yes\")\n\n", "selected": false, "score": 1.0, "complete_program": "n, t, s=map(int, input().split())\nt1=n / s\nif t1 <= t:\n\tprint(\"Yes\")\n\n\nelse:\n\tprint(\"No\")\n"}], [{"token": "else", "state": "n, t, s=map(int, input().split())\nt1=n / s\nif t1 <= t:\n\tprint(\"Yes\")\nelse", "selected": true, "score": 1.0, "complete_program": "n, t, s=map(int, input().split())\nt1=n / s\nif t1 <= t:\n\tprint(\"Yes\")\nelse:\n\tprint(\"No\")\n"}, {"token": "el", "state": "n, t, s=map(int, input().split())\nt1=n / s\nif t1 <= t:\n\tprint(\"Yes\")\nel", "selected": false, "score": 1.0, "complete_program": "n, t, s=map(int, input().split())\nt1=n / s\nif t1 <= t:\n\tprint(\"Yes\")\nelif t1 > t:\n\tprint(\"No\")\n"}, {"token": "\t", "state": "n, t, s=map(int, input().split())\nt1=n / s\nif t1 <= t:\n\tprint(\"Yes\")\n\t", "selected": false, "score": 1.0, "complete_program": "n, t, s=map(int, input().split())\nt1=n / s\nif t1 <= t:\n\tprint(\"Yes\")\n\treturn\nelse:\n\tprint(\"No\")\n"}], [{"token": ":", "state": "n, t, s=map(int, input().split())\nt1=n / s\nif t1 <= t:\n\tprint(\"Yes\")\nelse:", "selected": true, "score": 1.0, "complete_program": "n, t, s=map(int, input().split())\nt1=n / s\nif t1 <= t:\n\tprint(\"Yes\")\nelse:\n\tprint(\"No\")\n"}, {"token": " :", "state": "n, t, s=map(int, input().split())\nt1=n / s\nif t1 <= t:\n\tprint(\"Yes\")\nelse :", "selected": false, "score": 1.0, "complete_program": "n, t, s=map(int, input().split())\nt1=n / s\nif t1 <= t:\n\tprint(\"Yes\")\nelse :\n\tprint(\"No\")\n"}, {"token": " ", "state": "n, t, s=map(int, input().split())\nt1=n / s\nif t1 <= t:\n\tprint(\"Yes\")\nelse ", "selected": false, "score": 1.0, "complete_program": "n, t, s=map(int, input().split())\nt1=n / s\nif t1 <= t:\n\tprint(\"Yes\")\nelse            :\n\tprint(\"No\")\n"}], [{"token": "\n", "state": "n, t, s=map(int, input().split())\nt1=n / s\nif t1 <= t:\n\tprint(\"Yes\")\nelse:\n", "selected": true, "score": 1.0, "complete_program": "n, t, s=map(int, input().split())\nt1=n / s\nif t1 <= t:\n\tprint(\"Yes\")\nelse:\n\tprint(\"No\")\n"}, {"token": " ", "state": "n, t, s=map(int, input().split())\nt1=n / s\nif t1 <= t:\n\tprint(\"Yes\")\nelse: ", "selected": false, "score": 1.0, "complete_program": "n, t, s=map(int, input().split())\nt1=n / s\nif t1 <= t:\n\tprint(\"Yes\")\nelse:    \n\tprint(\"No\")\n"}, {"token": " print", "state": "n, t, s=map(int, input().split())\nt1=n / s\nif t1 <= t:\n\tprint(\"Yes\")\nelse: print", "selected": false, "score": 1.0, "complete_program": "n, t, s=map(int, input().split())\nt1=n / s\nif t1 <= t:\n\tprint(\"Yes\")\nelse: print(\"No\")\n"}], [{"token": "\t", "state": "n, t, s=map(int, input().split())\nt1=n / s\nif t1 <= t:\n\tprint(\"Yes\")\nelse:\n\t", "selected": true, "score": 1.0, "complete_program": "n, t, s=map(int, input().split())\nt1=n / s\nif t1 <= t:\n\tprint(\"Yes\")\nelse:\n\tprint(\"No\")\n"}, {"token": "#", "state": "n, t, s=map(int, input().split())\nt1=n / s\nif t1 <= t:\n\tprint(\"Yes\")\nelse:\n#", "selected": false, "score": 1.0, "complete_program": "n, t, s=map(int, input().split())\nt1=n / s\nif t1 <= t:\n\tprint(\"Yes\")\nelse:\n#         print(\"No\")\n\tprint(\"No\")\n"}, {"token": " ", "state": "n, t, s=map(int, input().split())\nt1=n / s\nif t1 <= t:\n\tprint(\"Yes\")\nelse:\n ", "selected": false, "score": 1.0, "complete_program": "n, t, s=map(int, input().split())\nt1=n / s\nif t1 <= t:\n\tprint(\"Yes\")\nelse:\n    print(\"No\")\n"}], [{"token": "print", "state": "n, t, s=map(int, input().split())\nt1=n / s\nif t1 <= t:\n\tprint(\"Yes\")\nelse:\n\tprint", "selected": true, "score": 1.0, "complete_program": "n, t, s=map(int, input().split())\nt1=n / s\nif t1 <= t:\n\tprint(\"Yes\")\nelse:\n\tprint(\"No\")\n"}, {"token": "t", "state": "n, t, s=map(int, input().split())\nt1=n / s\nif t1 <= t:\n\tprint(\"Yes\")\nelse:\n\tt", "selected": false, "score": 1.0, "complete_program": "n, t, s=map(int, input().split())\nt1=n / s\nif t1 <= t:\n\tprint(\"Yes\")\nelse:\n\tt2=int(t1 * 100)\n\tif t2 <= t:\n\t\tprint(\"Yes\")\n\telse:\n\t\tprint(\"No\")\n"}, {"token": "if", "state": "n, t, s=map(int, input().split())\nt1=n / s\nif t1 <= t:\n\tprint(\"Yes\")\nelse:\n\tif", "selected": false, "score": 0.625, "complete_program": "n, t, s=map(int, input().split())\nt1=n / s\nif t1 <= t:\n\tprint(\"Yes\")\nelse:\n\tif n == t:\n\t\tprint(\"Yes\")\n\telif t1 < t:\n\t\tprint(\"No\")\n"}], [{"token": "(\"", "state": "n, t, s=map(int, input().split())\nt1=n / s\nif t1 <= t:\n\tprint(\"Yes\")\nelse:\n\tprint(\"", "selected": true, "score": 1.0, "complete_program": "n, t, s=map(int, input().split())\nt1=n / s\nif t1 <= t:\n\tprint(\"Yes\")\nelse:\n\tprint(\"No\")\n"}, {"token": "('", "state": "n, t, s=map(int, input().split())\nt1=n / s\nif t1 <= t:\n\tprint(\"Yes\")\nelse:\n\tprint('", "selected": false, "score": 1.0, "complete_program": "n, t, s=map(int, input().split())\nt1=n / s\nif t1 <= t:\n\tprint(\"Yes\")\nelse:\n\tprint('No')\n"}, {"token": " (\"", "state": "n, t, s=map(int, input().split())\nt1=n / s\nif t1 <= t:\n\tprint(\"Yes\")\nelse:\n\tprint (\"", "selected": false, "score": 1.0, "complete_program": "n, t, s=map(int, input().split())\nt1=n / s\nif t1 <= t:\n\tprint(\"Yes\")\nelse:\n\tprint (\"No\")\n"}], [{"token": "No", "state": "n, t, s=map(int, input().split())\nt1=n / s\nif t1 <= t:\n\tprint(\"Yes\")\nelse:\n\tprint(\"No", "selected": true, "score": 1.0, "complete_program": "n, t, s=map(int, input().split())\nt1=n / s\nif t1 <= t:\n\tprint(\"Yes\")\nelse:\n\tprint(\"No\")\n"}, {"token": "NO", "state": "n, t, s=map(int, input().split())\nt1=n / s\nif t1 <= t:\n\tprint(\"Yes\")\nelse:\n\tprint(\"NO", "selected": false, "score": 0.625, "complete_program": "n, t, s=map(int, input().split())\nt1=n / s\nif t1 <= t:\n\tprint(\"Yes\")\nelse:\n\tprint(\"NO\")\n"}, {"token": "no", "state": "n, t, s=map(int, input().split())\nt1=n / s\nif t1 <= t:\n\tprint(\"Yes\")\nelse:\n\tprint(\"no", "selected": false, "score": 0.625, "complete_program": "n, t, s=map(int, input().split())\nt1=n / s\nif t1 <= t:\n\tprint(\"Yes\")\nelse:\n\tprint(\"no\")\n"}], [{"token": "\")", "state": "n, t, s=map(int, input().split())\nt1=n / s\nif t1 <= t:\n\tprint(\"Yes\")\nelse:\n\tprint(\"No\")", "selected": true, "score": 1.0, "complete_program": "n, t, s=map(int, input().split())\nt1=n / s\nif t1 <= t:\n\tprint(\"Yes\")\nelse:\n\tprint(\"No\")\n"}, {"token": ".\")", "state": "n, t, s=map(int, input().split())\nt1=n / s\nif t1 <= t:\n\tprint(\"Yes\")\nelse:\n\tprint(\"No.\")", "selected": false, "score": 0.625, "complete_program": "n, t, s=map(int, input().split())\nt1=n / s\nif t1 <= t:\n\tprint(\"Yes\")\nelse:\n\tprint(\"No.\")\n"}, {"token": "\\", "state": "n, t, s=map(int, input().split())\nt1=n / s\nif t1 <= t:\n\tprint(\"Yes\")\nelse:\n\tprint(\"No\\", "selected": false, "score": 1.0, "complete_program": "n, t, s=map(int, input().split())\nt1=n / s\nif t1 <= t:\n\tprint(\"Yes\")\nelse:\n\tprint(\"No\\n\")\n"}], [{"token": "\n", "state": "n, t, s=map(int, input().split())\nt1=n / s\nif t1 <= t:\n\tprint(\"Yes\")\nelse:\n\tprint(\"No\")\n", "selected": true, "score": 1.0, "complete_program": "n, t, s=map(int, input().split())\nt1=n / s\nif t1 <= t:\n\tprint(\"Yes\")\nelse:\n\tprint(\"No\")\n"}, {"token": " ", "state": "n, t, s=map(int, input().split())\nt1=n / s\nif t1 <= t:\n\tprint(\"Yes\")\nelse:\n\tprint(\"No\") ", "selected": false, "score": 1.0, "complete_program": "n, t, s=map(int, input().split())\nt1=n / s\nif t1 <= t:\n\tprint(\"Yes\")\nelse:\n\tprint(\"No\") \n"}, {"token": "\n\n", "state": "n, t, s=map(int, input().split())\nt1=n / s\nif t1 <= t:\n\tprint(\"Yes\")\nelse:\n\tprint(\"No\")\n\n", "selected": false, "score": 1.0, "complete_program": "n, t, s=map(int, input().split())\nt1=n / s\nif t1 <= t:\n\tprint(\"Yes\")\nelse:\n\tprint(\"No\")\n\n"}], [{"token": "<|endoftext|>", "state": "n, t, s=map(int, input().split())\nt1=n / s\nif t1 <= t:\n\tprint(\"Yes\")\nelse:\n\tprint(\"No\")\n", "selected": true, "score": 1.0, "complete_program": "n, t, s=map(int, input().split())\nt1=n / s\nif t1 <= t:\n\tprint(\"Yes\")\nelse:\n\tprint(\"No\")\n"}, {"token": "''", "state": "n, t, s=map(int, input().split())\nt1=n / s\nif t1 <= t:\n\tprint(\"Yes\")\nelse:\n\tprint(\"No\")\n''", "selected": false, "score": 1.0, "complete_program": "n, t, s=map(int, input().split())\nt1=n / s\nif t1 <= t:\n\tprint(\"Yes\")\nelse:\n\tprint(\"No\")\n'''\n10 10 11 12 13 14 15 16 17 11 11\n'''\n"}, {"token": "t", "state": "n, t, s=map(int, input().split())\nt1=n / s\nif t1 <= t:\n\tprint(\"Yes\")\nelse:\n\tprint(\"No\")\nt", "selected": false, "score": 1.0, "complete_program": "n, t, s=map(int, input().split())\nt1=n / s\nif t1 <= t:\n\tprint(\"Yes\")\nelse:\n\tprint(\"No\")\nt1 = int(t1)\n"}]]